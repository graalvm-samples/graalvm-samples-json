<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>framework-parent</artifactId>
		<groupId>com.fushun.framework</groupId>
		<version>2.1.0-SNAPSHOT</version>
	</parent>
	<groupId>com.fushun.framework</groupId>
	<artifactId>graalvm-samples-json</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>graalvm-samples-json</name>
	<description>graalvm-samples-json project for Spring Boot</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.graalvm.sdk</groupId>
			<artifactId>graal-sdk</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.graalvm.buildtools</groupId>
			<artifactId>graalvm-reachability-metadata</artifactId>
			<version>0.10.2</version>
			<classifier>repository</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.1-jre</version> <!-- 请使用最新的稳定版本 -->
		</dependency>


		<dependency>
			<groupId>com.fushun.framework</groupId>
			<artifactId>framework-util</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fushun.framework</groupId>
			<artifactId>framework-logs</artifactId>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>com.fushun.framework</groupId>
				<artifactId>framework-maven-dependency-check-plugin</artifactId>
				<version>2.1.0-SNAPSHOT</version>
				<executions>
					<execution>
						<goals>
							<goal>checkDependencyUsage</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<configuration>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<metadataRepository>
						<enabled>true</enabled>
<!--						<localPath>${project.basedir}/config-directory</localPath>-->
					</metadataRepository>
					<requiredVersion>23.1</requiredVersion>
					<buildArgs combine.children="append">
						<buildArg>
							--initialize-at-build-time=org.apache.logging.log4j.spi.Provider
							--initialize-at-build-time=cn.hutool.core.convert.BasicType
							--initialize-at-build-time=cn.hutool.core.io.FileUtil
							--initialize-at-build-time=cn.hutool.core.util.ClassLoaderUtil
							--initialize-at-build-time=cn.hutool.core.util.CharsetUtil
							--initialize-at-build-time=kotlin.annotation.AnnotationTarget
							--initialize-at-build-time=kotlin.annotation.AnnotationRetention
							--initialize-at-build-time=kotlin.annotation.AnnotationRetention
							--initialize-at-build-time=ch.qos.logback.core.CoreConstants
						</buildArg>
						<buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
						<buildArg>-H:+InlineBeforeAnalysis</buildArg>
						<buildArg>-H:+AddAllCharsets</buildArg>
						<buildArg>-H:DeadlockWatchdogInterval=10</buildArg>
						<buildArg>-H:+DeadlockWatchdogExitOnTimeout</buildArg>
						<buildArg>-H:+ReportExceptionStackTraces</buildArg>
						<buildArg>--enable-url-protocols=http</buildArg>
					</buildArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.fushun.framework.sample.natives.demo.DemoApplication</mainClass>
					<image>
<!--						<builder>paketobuildpacks/builder-jammy-tiny:0.0.263</builder>-->
						<builder>paketobuildpacks/builder-jammy-full:0.3.379</builder>
<!--						<runImage>paketobuildpacks/run-jammy-tiny:0.2.42</runImage>-->
						<runImage>paketobuildpacks/run-jammy-full:0.1.48</runImage>
						<env>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
							<BP_JVM_VERSION>21</BP_JVM_VERSION>
							<BP_JVM_BUILD_CACHE_ENABLED>true</BP_JVM_BUILD_CACHE_ENABLED>
							<BP_JVM_BUILD_CACHE_LAYER>true</BP_JVM_BUILD_CACHE_LAYER>
							<BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
								-H:+AddAllCharsets
								-H:+InlineBeforeAnalysis
								-H:DeadlockWatchdogInterval=10
								-H:+DeadlockWatchdogExitOnTimeout
								-H:+ReportExceptionStackTraces
								-H:+UnlockExperimentalVMOptions
								<!-- https://docs.oracle.com/en/graalvm/enterprise/21/docs/reference-manual/native-image/URLProtocols/#supported-and-enabled-by-default -->
								--enable-http
								--enable-https
								--enable-url-protocols=http
								<!-- https://docs.oracle.com/en/graalvm/enterprise/21/docs/reference-manual/native-image/JCASecurityServices/#provider-registration -->
								-H:+TraceSecurityServices
<!--								-H:+GenerateBuildArtifactsFile-->
<!--								-H:+AllowDeprecatedBuilderClassesOnImageClasspath-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.interfaces.DHKey-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.interfaces.DHPrivateKey-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.interfaces.DHPublicKey-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.interfaces.PBEKey-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.PSource.PSpecified-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.ChaCha20ParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.DESedeKeySpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.DESKeySpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.DHGenParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.DHParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.DHPrivateKeySpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.DHPublicKeySpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.GCMParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.IvParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.OAEPParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.PBEKeySpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.PBEParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.PSource-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.RC2ParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.RC5ParameterSpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.spec.SecretKeySpec-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEM.Decapsulator-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEM.DelayedKEM-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEM.Encapsulated-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEM.Encapsulator-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEMSpi.DecapsulatorSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEMSpi.EncapsulatorSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.JceSecurity.WeakIdentityWrapper-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPolicyParser.CryptoPermissionEntry-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPolicyParser.GrantEntry-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPolicyParser.ParsingException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.Cipher.Transform-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.AEADBadTagException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.BadPaddingException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.Cipher-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.Cipher.Transform-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CipherInputStream-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CipherOutputStream-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CipherSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoAllPermission-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoAllPermissionCollection-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPermission-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPermissionCollection-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPermissions-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.CryptoPolicyParser-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.DecapsulateException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.EncryptedPrivateKeyInfo-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.ExemptionMechanism-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.ExemptionMechanismException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.ExemptionMechanismSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.extObjectInputStream-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.IllegalBlockSizeException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.JceSecurity-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.JceSecurity.WeakIdentityWrapper-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.JceSecurityManager-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEM-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KEMSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KeyAgreement-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KeyAgreementSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.KeyGeneratorSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.Mac-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.MacSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.NoSuchPaddingException-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.NullCipher-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.NullCipherSpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.PermissionsEnumerator-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.ProviderVerifier-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.SealedObject-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.SecretKey-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.SecretKeyFactory-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.SecretKeyFactorySpi-->
<!--								&#45;&#45;initialize-at-build-time=javax.crypto.ShortBufferException-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.security.ntlm.Client-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.security.ntlm.NTLM-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.security.ntlm.NTLMException-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.security.ntlm.Server-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.security.ntlm.Version-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESConstants-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESCrypt-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESKeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESKeyWrap-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESKeyWrapPadded-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.AESParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.ARCFOURCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.BlockCipherParamsCore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.BlowfishCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.BlowfishConstants-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.BlowfishCrypt-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.BlowfishKeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.BlowfishParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.ChaCha20Cipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.ChaCha20Poly1305Parameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.CipherBlockChaining-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.CipherCore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.CipherFeedback-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.CipherForKeyProtector-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.CipherTextStealing-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.ConstructKeys-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.CounterMode-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESConstants-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESCrypt-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeCrypt-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeKey-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeKeyFactory-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeKeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESedeWrapCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESKey-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESKeyFactory-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESKeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DESParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHKEM-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHKeyAgreement-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHKeyFactory-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHKeyPairGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHParameterGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHPrivateKey-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.DHPublicKey-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.ElectronicCodeBook-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.EncryptedPrivateKeyInfo-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.FeedbackCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.GaloisCounterMode-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.GCM-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.GCMParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.GCTR-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.GHASH-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.HmacCore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.HmacMD5-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.HmacMD5KeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.HmacPKCS12PBECore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.HmacSHA1-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.HmacSHA1KeyGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.ISO10126Padding-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.JceKeyStore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.KeyGeneratorCore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.KeyProtector-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.KeyWrapCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.KWUtil-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.OAEPParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.OutputFeedback-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.Padding-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBEKey-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBEKeyFactory-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBEParameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBES1Core-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBES2Core-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBES2Parameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBEWithMD5AndDESCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBEWithMD5AndTripleDESCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBKDF2Core-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBKDF2KeyImpl-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PBMAC1Core-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PCBC-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PKCS5Padding-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PKCS12PBECipherCore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.Poly1305-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.PrivateKeyInfo-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.RC2Cipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.RC2Crypt-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.RC2Parameters-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.RSACipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.SealedObjectForKeyProtector-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.SslMacCore-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.SunJCE-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.SymmetricCipher-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.TlsKeyMaterialGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.TlsMasterSecretGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.TlsPrfGenerator-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.TlsRsaPremasterSecretGenerator-->
<!--								&#45;&#45;initialize-at-build-time=java.util.function.Function-->
<!--								&#45;&#45;initialize-at-build-time=com.sun.crypto.provider.SunJCE-->
<!--								&#45;&#45;initialize-at-build-time=java.security.SecureRandom,org.bouncycastle.jce.provider.BouncyCastleProvider,org.bouncycastle.util.Strings,org.bouncycastle.jce.provider.BouncyCastleProviderConfiguration-->
<!--								&#45;&#45;initialize-at-build-time=org.bouncycastle.jcajce.provider.config.ConfigurableProvider-->
<!--								&#45;&#45;initialize-at-build-time=org.bouncycastle.jcajce.provider.util.AlgorithmProvider-->
<!--								&#45;&#45;initialize-at-build-time=org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter-->

							</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
							<!--                            <HTTP_PROXY>http://127.0.0.1:8118</HTTP_PROXY>-->
							<!--                            <HTTPS_PROXY>http://127.0.0.1:8118</HTTPS_PROXY>-->
						</env>
						<!--                        <pullPolicy>IF_NOT_PRESENT</pullPolicy> &lt;!&ndash; 如果本地不存在，则拉取镜像 &ndash;&gt;-->
						<!--                        <name>${project.artifactId}:${project.version}</name> &lt;!&ndash; 自定义镜像名称 &ndash;&gt;-->
					</image>
					<!--                    <applicationDirectory>${project.build.outputDirectory}</applicationDirectory>-->
					<!--                    <cleanCache>false</cleanCache> &lt;!&ndash; 保持缓存，不在每次构建前清理 &ndash;&gt;-->
					<!--                    <excludeDevtools>true</excludeDevtools> &lt;!&ndash; 排除开发工具 &ndash;&gt;-->
					<!--                    <finalName>${project.build.finalName}</finalName>-->
					<!--                    <publish>false</publish> &lt;!&ndash; 不自动发布生成的镜像 &ndash;&gt;-->
					<!--                    <skip>false</skip> &lt;!&ndash; 不跳过构建过程 &ndash;&gt;-->
					<!--                    <sourceDirectory>${project.build.directory}</sourceDirectory>-->
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
